<Layouts:LayoutBase x:Class="CameraControl.Layouts.LayoutNormal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
                    xmlns:Layouts="clr-namespace:CameraControl.Layouts"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:translation="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:classes="clr-namespace:CameraControl.Classes"
                    xmlns:viewModel="clr-namespace:CameraControl.ViewModel"
                    
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:zoomandpan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
                    mc:Ignorable="d" d:DesignHeight="484" d:DesignWidth="989">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <ResourceDictionary Source="LayoutBaseResource.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Combobox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <viewModel:LayoutViewModel/>
    </UserControl.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="364*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" ClipToBounds="True">
            <Grid RenderTransformOrigin="0.5,0.5" ClipToBounds="True">
                <Grid.LayoutTransform>
                    <RotateTransform  Angle="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.RotationAngle}" />
                </Grid.LayoutTransform>
                <zoomandpan:ZoomAndPanControl x:Name="zoomAndPanControl" MouseWheel="zoomAndPanControl_MouseWheel" Background="Transparent" >
                    <zoomandpan:ImageColorPicker Name="Image" Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.DisplayImage}" HorizontalAlignment="Center" Margin="15" Stretch="Uniform" Width="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.FileInfo.Width}" Height="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.FileInfo.Height}"
                       Scale="{Binding ElementName=ZoomAndPanControl, Path=ViewportZoom}">
                    <Image.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=ImageDoubleClickCommand}" />
                    </Image.InputBindings>
                    <Image.Effect>
                        <DropShadowEffect ShadowDepth="10" Color="Black" BlurRadius="20" />
                    </Image.Effect>
                </zoomandpan:ImageColorPicker>
            </zoomandpan:ZoomAndPanControl>
            </Grid>
            <MediaElement Name="VideoControl" Grid.Column="0" Grid.RowSpan="3" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsMovie, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.FileName}" LoadedBehavior="Manual" UnloadedBehavior="Close" >
            </MediaElement>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsMovie, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button Height="50" Width="50" Margin="5" Style="{DynamicResource MetroCircleButtonStyle}" Click="Button_Click">
                    <Rectangle Width="25" Height="25">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_play}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Height="50" Width="50" Margin="5" Style="{DynamicResource MetroCircleButtonStyle}" Click="Button_Click_1" >
                    <Rectangle Width="25" Height="25">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_pause}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Height="50" Width="50" Margin="5" Style="{DynamicResource MetroCircleButtonStyle}" Click="Button_Click_2">
                    <Rectangle Width="25" Height="25">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_stop}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>

            </StackPanel>
        </Grid>
        <materialDesign:Card Grid.Row="1" Margin="4" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowThumbPanel, Converter={StaticResource BooleanToVisibilityConverter}}">
        <DockPanel  UseLayoutRounding="True" Margin="4">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Button Margin="4" Command="{Binding PrevImageCommand}" Style="{StaticResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="ArrowLeft" />
                        </Button>
                    <Button  Margin="4" VerticalAlignment="Center" HorizontalAlignment="Right" Command="{Binding NextImageCommand}" Style="{StaticResource MaterialDesignFlatButton}">
                        <materialDesign:PackIcon Width="24" Height="24" Kind="ArrowRight" />
                        </Button>
                    <StackPanel  HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ShowThumbUpDown, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}">
                        <ToggleButton Height="40"  Width="40" Margin="2,-2" IsChecked="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsUnLiked}"  Style="{StaticResource  MaterialDesignFlatPrimaryToggleButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="ThumbDown" />                      
                        </ToggleButton>

                            <ToggleButton  Height="40"  Width="40" Margin="2,-2" IsChecked="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.IsLiked}"  Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="ThumbUp" />
                        </ToggleButton>
                    </StackPanel>

                    <!--   New buttons for selection -->
                    <Button Margin="4"  Command="{Binding Path=SelectNoneCommand}" ToolTip="{translation:TranslateExtension LabelSelectNone}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="CheckboxBlankOutline" />
                        </Button>
                    <Button Margin="4" Command="{Binding Path=SelectAllCommand}" ToolTip="{translation:TranslateExtension LabelSelectAll}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}">
                        <materialDesign:PackIcon Width="24" Height="24" Kind="CheckboxMarkedOutline" />
                        </Button>

                    <!--   New buttons other software! -->

                    <Button Margin="1" Command="{Binding OpenInLightroomCommand}" 
                            ToolTip="{translation:TranslateExtension LabelOpenLightroom}" 
                            VerticalAlignment="Center" Content="Lr" FontSize="20"
                            HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}"
                            Visibility="{Binding LightroomIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    </Button>

                    <Button Margin="4" ToolTip="{translation:TranslateExtension LabelDeleteFiles}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=DeleteItemCommand}" Style="{DynamicResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="Delete" />
                        </Button>
                    <Button Margin="4" ToolTip="{translation:TranslateExtension LabelShowInExplorer}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=OpenExplorerCommand}"  Style="{DynamicResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="FolderImage" />
                        </Button>
                    <Button Margin="4" ToolTip="{translation:TranslateExtension LabelRestoreFromBackup}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RestoreCommand}"  Style="{DynamicResource MaterialDesignFlatButton}"
                    IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.HaveBackupFile}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="BackupRestore" />
                        </Button>
                    <Button Margin="4" ToolTip="{translation:TranslateExtension LabelRotateCounterclockwise}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RotateLeftCommand}"  Style="{DynamicResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="RotateLeftVariant" />
                        </Button>
                    <Button Margin="4" ToolTip="{translation:TranslateExtension LabelRotateClockwise}" VerticalAlignment="Center" HorizontalAlignment="Right"  Command="{Binding Path=RotateRightCommand}"  Style="{DynamicResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Kind="RotateRightVariant" />
                        </Button>                    
                    <ItemsControl ItemsSource="{Binding PanelPlugins}" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Control}" Visibility="{Binding Path=Visible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                <!--<controls:ProgressRing IsActive="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ImageLoading}" VerticalAlignment="Center" HorizontalAlignment="Right"  Height="30" Width="30" />-->
                    <!--<ToggleButton Height="40" Width="40" Content="[ : ]" Style="{DynamicResource MaterialDesignFlatPrimaryToggleButton}" IsChecked="{Binding ZoomToFocus}" ToolTip="{translation:TranslateExtension LabelZoomToFocus}" />
                    <ToggleButton Height="40" Width="40" Content="1:2" Style="{DynamicResource MaterialDesignFlatPrimaryToggleButton}" IsChecked="{Binding Zoom12}"/>
                    <ToggleButton Height="40" Width="40" Content="1:1" Style="{DynamicResource MaterialDesignFlatPrimaryToggleButton}" IsChecked="{Binding Zoom11}"/>
                    <ToggleButton Height="40" Width="40" Content="Fit" Style="{DynamicResource MaterialDesignFlatPrimaryToggleButton}" IsChecked="{Binding ZoomFit}"/>-->      
                    <ComboBox Width="50" VerticalAlignment="Center" HorizontalContentAlignment="Right" SelectedIndex="{Binding ZoomIndex}">
                        <ComboBoxItem Content="Fit"/>
                        <ComboBoxItem Content="60 %"/>
                        <ComboBoxItem Content="100 %"/>
                        <ComboBoxItem Content="200 %"/>
                    </ComboBox>
                </StackPanel>
        </DockPanel>
        </materialDesign:Card>
        <ListBox Grid.Row="2" VirtualizingStackPanel.IsVirtualizing="True"  Name="ImageLIstBox" ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=DefaultSession.Files, IsAsync=True}" BorderThickness="0" IsSynchronizedWithCurrentItem="True" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
            <i:Interaction.Behaviors>
                <classes:HorizontalScrollBehavior />
            </i:Interaction.Behaviors>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <ContextMenu.DataContext>
                        <viewModel:MainMenuViewModel/>
                    </ContextMenu.DataContext>
                    <MenuItem Header="Select" >
                        <MenuItem Header="{translation:TranslateExtension LabelSelectNone}" Command="{Binding Path=SelectNoneCommand}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectAll}" Command="{Binding SendCommand}" CommandParameter="SelectAll_Image" InputGestureText="{classes:CommandShortcutExtensioncs SelectAll_Image}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectUnLiked}" Command="{Binding Path=SelectUnLiked}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectLiked}" Command="{Binding Path=SelectLiked}"/>
                        <MenuItem Header="{translation:TranslateExtension LabelSelectSeries}" Command="{Binding Path=SelectSeries}"/>
                        <MenuItem Header="{translation:TranslateExtension MenuInver}" Command="{Binding Path=SelectInvertCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Edit in" >
                        <MenuItem Header="Photoshop" Command="{Binding OpenInPhotoshopCommand}" Visibility="{Binding PhotoshopIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <MenuItem Header="Lightroom" Command="{Binding OpenInLightroomCommand}" Visibility="{Binding LightroomIsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{translation:TranslateExtension LabelDeleteFiles}" Command="{Binding SendCommand}" CommandParameter="Del_Image" />
                    <MenuItem Header="{translation:TranslateExtension LabelShowInExplorer}" Command="{Binding SendCommand}" CommandParameter="ViewExplorer" />
                    <MenuItem Header="{translation:TranslateExtension LabelOpenInExternalViewer}" Command="{Binding SendCommand}" CommandParameter="ViewExternal" />
                    <MenuItem Header="Copy full path in clipboard" Name="mnu_copypath" Command="{Binding Path=CopyNameClipboardCommand}" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Top"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        <StackPanel Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal" Background="{DynamicResource WhiteBrush}"  Margin="2,-5">
            <Label Content="{Binding ElementName=ImageLIstBox, Path=SelectedIndex}" Margin="0" Padding="0"/>
            <Label Content="/" Margin="0" Padding="0"/>
            <Label Content="{Binding ElementName=ImageLIstBox, Path=Items.Count}" Margin="0" Padding="0"/>
        </StackPanel>

    </Grid>
</Layouts:LayoutBase>
