<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
                    xmlns:classes="clr-namespace:CameraControl.Core.Classes;assembly=CameraControl.Core"
                    xmlns:wpf="clr-namespace:CameraControl.Core.Wpf;assembly=CameraControl.Core"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:controls1="clr-namespace:CameraControl.Controls"
                    xmlns:local="clr-namespace:CameraControl.Core.Controls.ZoomAndPan;assembly=CameraControl.Core">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <wpf:ItemBackgroundConverter x:Key="myConverter"/>
    <!--
    Default style and template for the ZoomAndPanControl.
    -->
    <Style 
        TargetType="{x:Type local:ZoomAndPanControl}"
        >

        <Setter 
            Property="Template"
            >
            <Setter.Value>

                <ControlTemplate 
                    TargetType="{x:Type local:ZoomAndPanControl}"
                    >

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        >

                        <!-- 
                        The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                    
                        A transforms computed from 'ContentScale', 'ContentOffsetX' and 'ContentOffsetY' are assigned 
                        to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                        
                        The alignment is set to top-left.  This allows the content offset to be used to place
                        the content in the center of the viewport when the viewport is bigger than the content.
                        -->
                        <ContentPresenter 
							x:Name="PART_Content"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            />

                    </Border>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <!-- Set the ItemTemplate of the ListBox to a DataTemplate which
           explains how to display an object of type BitmapImage. -->
        <!--<Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                    <Setter Property="Background">
                        <Setter.Value>
                            <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource myConverter}"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>-->
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="classes:FileItem">
                    <Grid Margin="-5,0,0,0" >
                        <!--<Line Stroke="Green" StrokeThickness="4" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" X2="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}" Visibility="{Binding Alternate, Converter={StaticResource BooleanToVisibilityConverter}}" Opacity="0.5"/>-->
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ThumbHeigh}" Margin="4,4,4,4">
                                <!--<Rectangle Stroke="Black" Margin="0"/>
                            <Rectangle Stroke="Black" Margin="2" />-->
                                <Image Source="{Binding Path=Thumbnail}" ToolTip="{Binding Path=ToolTip}" Stretch="Uniform" Margin="3" Name="_image" RenderTransformOrigin="0.5,0.5">
                                    <Image.Effect>
                                        <DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="7" />
                                    </Image.Effect>
                                    <Image.LayoutTransform>
                                        <RotateTransform  Angle="{Binding RotationAngle}" />
                                    </Image.LayoutTransform>
                                </Image>
                                <Image Source="{Binding Path=ThumbnailMarks}" ToolTip="{Binding Path=ToolTip}" Stretch="Uniform" Margin="3" RenderTransformOrigin="0.5,0.5"
                                       Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=EnhancedThumbs, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Image.Effect>
                                        <DropShadowEffect ShadowDepth="2" Color="Black" BlurRadius="7" />
                                    </Image.Effect>
                                    <Image.LayoutTransform>
                                        <RotateTransform  Angle="{Binding RotationAngle}" />
                                    </Image.LayoutTransform>
                                </Image>
                                <Rectangle Stroke="Transparent" Margin="1" Name="_Rectangle"/>
                                <Rectangle Width="10" Height="10" Visibility="{Binding IsUnLiked, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_thumbs_down}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Width="10" Height="10" Visibility="{Binding IsLiked, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="6">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_thumbs_up}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <CheckBox IsChecked="{Binding Path=IsChecked}" Margin="3,3,3,5" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" FontSize="10" />
                                <Label Content="RAW" Background="White" Margin="5" Padding="1" Opacity="0.5" FontWeight="Bold" Foreground="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsRaw, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Label Content="VIDEO" Background="White" Margin="5" Padding="1" Opacity="0.5" FontWeight="Bold" Foreground="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding IsMovie, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <controls:ProgressRing IsActive="{Binding Loading}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Height="40" Width="40" />
                            </Grid>
                            <StackPanel Width="75" Margin="5" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=ShowThumbInfo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal" ToolTip="Aperture value">
                                    <Label Content="F : f/" Padding="0" />
                                    <Label Content="{Binding F}" Padding="0" FontStyle="Italic"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" >
                                    <Label Content="Iso : " Padding="0"/>
                                    <Label Content="{Binding Iso}" Padding="0" FontStyle="Italic"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" ToolTip="Exposure time">
                                    <Label Content="E : " Padding="0"/>
                                    <Label Content="{Binding E}" Padding="0" FontStyle="Italic"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" ToolTip="Focal Length">
                                    <Label Content="FL : " Padding="0"/>
                                    <Label Content="{Binding FocalLength}" Padding="0" FontStyle="Italic"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" ToolTip="Exposure Bias value">
                                    <Label Content="EB : " Padding="0"/>
                                    <Label Content="{Binding ExposureBias}" Padding="0" FontStyle="Italic"/>
                                </StackPanel>
                                <Grid Width="75" Height="30" >
                                    <Rectangle Width="5" HorizontalAlignment="Left" Fill="Blue" Margin="2" Visibility="{Binding FileInfo.IsUnderExposed, Converter={StaticResource BooleanToVisibilityConverter}}" ToolTip="Some area in image are under exposed"/>
                                    <Rectangle Width="5" HorizontalAlignment="Right" Fill="Red" Margin="2" Visibility="{Binding FileInfo.IsOverExposed, Converter={StaticResource BooleanToVisibilityConverter}}" ToolTip="Some area in image are over exposed"/>
                                    <Border Padding="2" BorderBrush="{DynamicResource BlackBrush}" BorderThickness="1">
                                        <Polygon Points="{Binding Path=FileInfo.LuminanceHistogramPoints}" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Opacity="1" />
                                    </Border>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                        <DataTrigger Binding="{Binding Path=IsUnLiked}" Value="true">
                            <Setter TargetName="_Rectangle" Property="Fill" Value="Black" />
                            <Setter TargetName="_Rectangle" Property="Opacity" Value="0.7" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Visible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Top"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

</ResourceDictionary>